digraph AST {
1 [shape=box, label="VarDecl name='nums'"];
4 [shape=box, label="VarDecl name='min'"];
7 [shape=box, label="Location name='a'\nreg: r0\ncode: \nloadAI [BP+16] => r0\ntype: int"];
8 [shape=box, label="Location name='b'\nreg: r1\ncode: \nloadAI [BP+24] => r1\ntype: int"];
6 [shape=box, label="BinaryOp op='<'\nreg: r2\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\ncmp_LT r0, r1 => r2\ntype: bool"];
6 -> 7;
6 -> 8;
11 [shape=box, label="Location name='min'\nreg: r3\ncode: \nloadAI [BP-8] => r3\ntype: int"];
12 [shape=box, label="Location name='a'\nreg: r4\ncode: \nloadAI [BP+16] => r4\ntype: int"];
10 [shape=box, label="Assignment\ncode: \nloadAI [BP+16] => r4\nstoreAI r4 => [BP-8]"];
10 -> 11;
10 -> 12;
9 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r4\nstoreAI r4 => [BP-8]\nsymbolTable: (empty)"];
9 -> 10;
15 [shape=box, label="Location name='min'\nreg: r5\ncode: \nloadAI [BP-8] => r5\ntype: int"];
16 [shape=box, label="Location name='b'\nreg: r6\ncode: \nloadAI [BP+24] => r6\ntype: int"];
14 [shape=box, label="Assignment\ncode: \nloadAI [BP+24] => r6\nstoreAI r6 => [BP-8]"];
14 -> 15;
14 -> 16;
13 [shape=box, label="Block\ncode: \nloadAI [BP+24] => r6\nstoreAI r6 => [BP-8]\nsymbolTable: (empty)"];
13 -> 14;
5 [shape=box, label="Conditional\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\ncmp_LT r0, r1 => r2\ncbr r2 => l1, l2\nl1:\nloadAI [BP+16] => r4\nstoreAI r4 => [BP-8]\njump l3\nl2:\nloadAI [BP+24] => r6\nstoreAI r6 => [BP-8]\nl3:"];
5 -> 6;
5 -> 9;
5 -> 13;
19 [shape=box, label="Location name='min'\nreg: r7\ncode: \nloadAI [BP-8] => r7\ntype: int"];
20 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r8\nreg: r8\ntype: int"];
18 [shape=box, label="BinaryOp op='>'\nreg: r9\ncode: \nloadAI [BP-8] => r7\nloadI 0 => r8\ncmp_GT r7, r8 => r9\ntype: bool"];
18 -> 19;
18 -> 20;
26 [shape=box, label="Location name='a'\nreg: r10\ncode: \nloadAI [BP+16] => r10\ntype: int"];
27 [shape=box, label="Location name='min'\nreg: r11\ncode: \nloadAI [BP-8] => r11\ntype: int"];
25 [shape=box, label="BinaryOp op='%'\nreg: r12\ncode: \nloadAI [BP+16] => r10\nloadAI [BP-8] => r11\ndiv r10, r11 => r13\nmult r11, r13 => r14\nsub r10, r14 => r12\ntype: int"];
25 -> 26;
25 -> 27;
28 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r15\nreg: r15\ntype: int"];
24 [shape=box, label="BinaryOp op='=='\nreg: r16\ncode: \nloadAI [BP+16] => r10\nloadAI [BP-8] => r11\ndiv r10, r11 => r13\nmult r11, r13 => r14\nsub r10, r14 => r12\nloadI 0 => r15\ncmp_EQ r12, r15 => r16\ntype: bool"];
24 -> 25;
24 -> 28;
31 [shape=box, label="Location name='b'\nreg: r17\ncode: \nloadAI [BP+24] => r17\ntype: int"];
32 [shape=box, label="Location name='min'\nreg: r18\ncode: \nloadAI [BP-8] => r18\ntype: int"];
30 [shape=box, label="BinaryOp op='%'\nreg: r19\ncode: \nloadAI [BP+24] => r17\nloadAI [BP-8] => r18\ndiv r17, r18 => r20\nmult r18, r20 => r21\nsub r17, r21 => r19\ntype: int"];
30 -> 31;
30 -> 32;
33 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r22\nreg: r22\ntype: int"];
29 [shape=box, label="BinaryOp op='=='\nreg: r23\ncode: \nloadAI [BP+24] => r17\nloadAI [BP-8] => r18\ndiv r17, r18 => r20\nmult r18, r20 => r21\nsub r17, r21 => r19\nloadI 0 => r22\ncmp_EQ r19, r22 => r23\ntype: bool"];
29 -> 30;
29 -> 33;
23 [shape=box, label="BinaryOp op='&&'\nreg: r24\ncode: \nloadAI [BP+16] => r10\nloadAI [BP-8] => r11\ndiv r10, r11 => r13\nmult r11, r13 => r14\nsub r10, r14 => r12\nloadI 0 => r15\ncmp_EQ r12, r15 => r16\nloadAI [BP+24] => r17\nloadAI [BP-8] => r18\ndiv r17, r18 => r20\nmult r18, r20 => r21\nsub r17, r21 => r19\nloadI 0 => r22\ncmp_EQ r19, r22 => r23\nand r16, r23 => r24\ntype: bool"];
23 -> 24;
23 -> 29;
35 [shape=box, label="Break\ncode: \njump l6"];
34 [shape=box, label="Block\ncode: \njump l6\nsymbolTable: (empty)"];
34 -> 35;
22 [shape=box, label="Conditional\ncode: \nloadAI [BP+16] => r10\nloadAI [BP-8] => r11\ndiv r10, r11 => r13\nmult r11, r13 => r14\nsub r10, r14 => r12\nloadI 0 => r15\ncmp_EQ r12, r15 => r16\nloadAI [BP+24] => r17\nloadAI [BP-8] => r18\ndiv r17, r18 => r20\nmult r18, r20 => r21\nsub r17, r21 => r19\nloadI 0 => r22\ncmp_EQ r19, r22 => r23\nand r16, r23 => r24\ncbr r24 => l7, l8\nl7:\njump l6\nl8:"];
22 -> 23;
22 -> 34;
37 [shape=box, label="Location name='min'\nreg: r25\ncode: \nloadAI [BP-8] => r25\ntype: int"];
39 [shape=box, label="Location name='min'\nreg: r26\ncode: \nloadAI [BP-8] => r26\ntype: int"];
40 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r27\nreg: r27\ntype: int"];
38 [shape=box, label="BinaryOp op='-'\nreg: r28\ncode: \nloadAI [BP-8] => r26\nloadI 1 => r27\nsub r26, r27 => r28\ntype: int"];
38 -> 39;
38 -> 40;
36 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r26\nloadI 1 => r27\nsub r26, r27 => r28\nstoreAI r28 => [BP-8]"];
36 -> 37;
36 -> 38;
21 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r10\nloadAI [BP-8] => r11\ndiv r10, r11 => r13\nmult r11, r13 => r14\nsub r10, r14 => r12\nloadI 0 => r15\ncmp_EQ r12, r15 => r16\nloadAI [BP+24] => r17\nloadAI [BP-8] => r18\ndiv r17, r18 => r20\nmult r18, r20 => r21\nsub r17, r21 => r19\nloadI 0 => r22\ncmp_EQ r19, r22 => r23\nand r16, r23 => r24\ncbr r24 => l7, l8\nl7:\njump l6\nl8:\nloadAI [BP-8] => r26\nloadI 1 => r27\nsub r26, r27 => r28\nstoreAI r28 => [BP-8]\nsymbolTable: (empty)"];
21 -> 22;
21 -> 36;
17 [shape=box, label="WhileLoop\ncode: \nl4:\nloadAI [BP-8] => r7\nloadI 0 => r8\ncmp_GT r7, r8 => r9\ncbr r9 => l5, l6\nl5:\nloadAI [BP+16] => r10\nloadAI [BP-8] => r11\ndiv r10, r11 => r13\nmult r11, r13 => r14\nsub r10, r14 => r12\nloadI 0 => r15\ncmp_EQ r12, r15 => r16\nloadAI [BP+24] => r17\nloadAI [BP-8] => r18\ndiv r17, r18 => r20\nmult r18, r20 => r21\nsub r17, r21 => r19\nloadI 0 => r22\ncmp_EQ r19, r22 => r23\nand r16, r23 => r24\ncbr r24 => l7, l8\nl7:\njump l6\nl8:\nloadAI [BP-8] => r26\nloadI 1 => r27\nsub r26, r27 => r28\nstoreAI r28 => [BP-8]\njump l4\nl6:"];
17 -> 18;
17 -> 21;
42 [shape=box, label="Location name='min'\nreg: r29\ncode: \nloadAI [BP-8] => r29\ntype: int"];
41 [shape=box, label="Return\ncode: \nloadAI [BP-8] => r29\ni2i r29 => RET\njump l0"];
41 -> 42;
3 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\ncmp_LT r0, r1 => r2\ncbr r2 => l1, l2\nl1:\nloadAI [BP+16] => r4\nstoreAI r4 => [BP-8]\njump l3\nl2:\nloadAI [BP+24] => r6\nstoreAI r6 => [BP-8]\nl3:\nl4:\nloadAI [BP-8] => r7\nloadI 0 => r8\ncmp_GT r7, r8 => r9\ncbr r9 => l5, l6\nl5:\nloadAI [BP+16] => r10\nloadAI [BP-8] => r11\ndiv r10, r11 => r13\nmult r11, r13 => r14\nsub r10, r14 => r12\nloadI 0 => r15\ncmp_EQ r12, r15 => r16\nloadAI [BP+24] => r17\nloadAI [BP-8] => r18\ndiv r17, r18 => r20\nmult r18, r20 => r21\nsub r17, r21 => r19\nloadI 0 => r22\ncmp_EQ r19, r22 => r23\nand r16, r23 => r24\ncbr r24 => l7, l8\nl7:\njump l6\nl8:\nloadAI [BP-8] => r26\nloadI 1 => r27\nsub r26, r27 => r28\nstoreAI r28 => [BP-8]\njump l4\nl6:\nloadAI [BP-8] => r29\ni2i r29 => RET\njump l0\nsymbolTable: \n  min : int {stack offset=-8}"];
3 -> 4;
3 -> 5;
3 -> 17;
3 -> 41;
2 [shape=box, label="FuncDecl name='gcd'\ncode: \ngcd:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\ncmp_LT r0, r1 => r2\ncbr r2 => l1, l2\nl1:\nloadAI [BP+16] => r4\nstoreAI r4 => [BP-8]\njump l3\nl2:\nloadAI [BP+24] => r6\nstoreAI r6 => [BP-8]\nl3:\nl4:\nloadAI [BP-8] => r7\nloadI 0 => r8\ncmp_GT r7, r8 => r9\ncbr r9 => l5, l6\nl5:\nloadAI [BP+16] => r10\nloadAI [BP-8] => r11\ndiv r10, r11 => r13\nmult r11, r13 => r14\nsub r10, r14 => r12\nloadI 0 => r15\ncmp_EQ r12, r15 => r16\nloadAI [BP+24] => r17\nloadAI [BP-8] => r18\ndiv r17, r18 => r20\nmult r18, r20 => r21\nsub r17, r21 => r19\nloadI 0 => r22\ncmp_EQ r19, r22 => r23\nand r16, r23 => r24\ncbr r24 => l7, l8\nl7:\njump l6\nl8:\nloadAI [BP-8] => r26\nloadI 1 => r27\nsub r26, r27 => r28\nstoreAI r28 => [BP-8]\njump l4\nl6:\nloadAI [BP-8] => r29\ni2i r29 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 8\nsymbolTable: \n  a : int {stack offset=16}\n  b : int {stack offset=24}"];
2 -> 3;
45 [shape=box, label="VarDecl name='i'"];
46 [shape=box, label="VarDecl name='result'"];
48 [shape=box, label="Location name='i'\nreg: r30\ncode: \nloadAI [BP-8] => r30\ntype: int"];
49 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r31\nreg: r31\ntype: int"];
47 [shape=box, label="Assignment\ncode: \nloadI 1 => r31\nstoreAI r31 => [BP-8]"];
47 -> 48;
47 -> 49;
51 [shape=box, label="Location name='result'\nreg: r32\ncode: \nloadAI [BP-16] => r32\ntype: int"];
52 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r33\nreg: r33\ntype: int"];
50 [shape=box, label="Assignment\ncode: \nloadI 1 => r33\nstoreAI r33 => [BP-16]"];
50 -> 51;
50 -> 52;
55 [shape=box, label="Location name='i'\nreg: r34\ncode: \nloadAI [BP-8] => r34\ntype: int"];
57 [shape=box, label="Location name='n'\nreg: r35\ncode: \nloadAI [BP+16] => r35\ntype: int"];
58 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r36\nreg: r36\ntype: int"];
56 [shape=box, label="BinaryOp op='+'\nreg: r37\ncode: \nloadAI [BP+16] => r35\nloadI 1 => r36\nadd r35, r36 => r37\ntype: int"];
56 -> 57;
56 -> 58;
54 [shape=box, label="BinaryOp op='<'\nreg: r38\ncode: \nloadAI [BP-8] => r34\nloadAI [BP+16] => r35\nloadI 1 => r36\nadd r35, r36 => r37\ncmp_LT r34, r37 => r38\ntype: bool"];
54 -> 55;
54 -> 56;
61 [shape=box, label="Location name='result'\nreg: r39\ncode: \nloadAI [BP-16] => r39\ntype: int"];
63 [shape=box, label="Location name='result'\nreg: r40\ncode: \nloadAI [BP-16] => r40\ntype: int"];
64 [shape=box, label="Location name='i'\nreg: r41\ncode: \nloadAI [BP-8] => r41\ntype: int"];
62 [shape=box, label="BinaryOp op='*'\nreg: r42\ncode: \nloadAI [BP-16] => r40\nloadAI [BP-8] => r41\nmult r40, r41 => r42\ntype: int"];
62 -> 63;
62 -> 64;
60 [shape=box, label="Assignment\ncode: \nloadAI [BP-16] => r40\nloadAI [BP-8] => r41\nmult r40, r41 => r42\nstoreAI r42 => [BP-16]"];
60 -> 61;
60 -> 62;
66 [shape=box, label="Location name='i'\nreg: r43\ncode: \nloadAI [BP-8] => r43\ntype: int"];
68 [shape=box, label="Location name='i'\nreg: r44\ncode: \nloadAI [BP-8] => r44\ntype: int"];
69 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r45\nreg: r45\ntype: int"];
67 [shape=box, label="BinaryOp op='+'\nreg: r46\ncode: \nloadAI [BP-8] => r44\nloadI 1 => r45\nadd r44, r45 => r46\ntype: int"];
67 -> 68;
67 -> 69;
65 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r44\nloadI 1 => r45\nadd r44, r45 => r46\nstoreAI r46 => [BP-8]"];
65 -> 66;
65 -> 67;
59 [shape=box, label="Block\ncode: \nloadAI [BP-16] => r40\nloadAI [BP-8] => r41\nmult r40, r41 => r42\nstoreAI r42 => [BP-16]\nloadAI [BP-8] => r44\nloadI 1 => r45\nadd r44, r45 => r46\nstoreAI r46 => [BP-8]\nsymbolTable: (empty)"];
59 -> 60;
59 -> 65;
53 [shape=box, label="WhileLoop\ncode: \nl10:\nloadAI [BP-8] => r34\nloadAI [BP+16] => r35\nloadI 1 => r36\nadd r35, r36 => r37\ncmp_LT r34, r37 => r38\ncbr r38 => l11, l12\nl11:\nloadAI [BP-16] => r40\nloadAI [BP-8] => r41\nmult r40, r41 => r42\nstoreAI r42 => [BP-16]\nloadAI [BP-8] => r44\nloadI 1 => r45\nadd r44, r45 => r46\nstoreAI r46 => [BP-8]\njump l10\nl12:"];
53 -> 54;
53 -> 59;
71 [shape=box, label="Location name='result'\nreg: r47\ncode: \nloadAI [BP-16] => r47\ntype: int"];
70 [shape=box, label="Return\ncode: \nloadAI [BP-16] => r47\ni2i r47 => RET\njump l9"];
70 -> 71;
44 [shape=box, label="Block\ncode: \nloadI 1 => r31\nstoreAI r31 => [BP-8]\nloadI 1 => r33\nstoreAI r33 => [BP-16]\nl10:\nloadAI [BP-8] => r34\nloadAI [BP+16] => r35\nloadI 1 => r36\nadd r35, r36 => r37\ncmp_LT r34, r37 => r38\ncbr r38 => l11, l12\nl11:\nloadAI [BP-16] => r40\nloadAI [BP-8] => r41\nmult r40, r41 => r42\nstoreAI r42 => [BP-16]\nloadAI [BP-8] => r44\nloadI 1 => r45\nadd r44, r45 => r46\nstoreAI r46 => [BP-8]\njump l10\nl12:\nloadAI [BP-16] => r47\ni2i r47 => RET\njump l9\nsymbolTable: \n  i : int {stack offset=-8}\n  result : int {stack offset=-16}"];
44 -> 45;
44 -> 46;
44 -> 47;
44 -> 50;
44 -> 53;
44 -> 70;
43 [shape=box, label="FuncDecl name='fact'\ncode: \nfact:\npush BP\ni2i SP => BP\naddI SP, -16 => SP\nloadI 1 => r31\nstoreAI r31 => [BP-8]\nloadI 1 => r33\nstoreAI r33 => [BP-16]\nl10:\nloadAI [BP-8] => r34\nloadAI [BP+16] => r35\nloadI 1 => r36\nadd r35, r36 => r37\ncmp_LT r34, r37 => r38\ncbr r38 => l11, l12\nl11:\nloadAI [BP-16] => r40\nloadAI [BP-8] => r41\nmult r40, r41 => r42\nstoreAI r42 => [BP-16]\nloadAI [BP-8] => r44\nloadI 1 => r45\nadd r44, r45 => r46\nstoreAI r46 => [BP-8]\njump l10\nl12:\nloadAI [BP-16] => r47\ni2i r47 => RET\njump l9\nl9:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 16\nsymbolTable: \n  n : int {stack offset=16}"];
43 -> 44;
74 [shape=box, label="VarDecl name='num_rows'"];
75 [shape=box, label="VarDecl name='i'"];
77 [shape=box, label="Location name='i'\nreg: r48\ncode: \nloadAI [BP-16] => r48\ntype: int"];
78 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r49\nreg: r49\ntype: int"];
76 [shape=box, label="Assignment\ncode: \nloadI 1 => r49\nstoreAI r49 => [BP-16]"];
76 -> 77;
76 -> 78;
81 [shape=box, label="Location name='i'\nreg: r50\ncode: \nloadAI [BP-16] => r50\ntype: int"];
82 [shape=box, label="Location name='base'\nreg: r51\ncode: \nloadAI [BP+16] => r51\ntype: int"];
80 [shape=box, label="BinaryOp op='<='\nreg: r52\ncode: \nloadAI [BP-16] => r50\nloadAI [BP+16] => r51\ncmp_LE r50, r51 => r52\ntype: bool"];
80 -> 81;
80 -> 82;
84 [shape=box, label="VarDecl name='spaces'"];
85 [shape=box, label="VarDecl name='hashes'"];
86 [shape=box, label="VarDecl name='s'"];
87 [shape=box, label="VarDecl name='h'"];
89 [shape=box, label="Location name='spaces'\nreg: r53\ncode: \nloadAI [BP-24] => r53\ntype: int"];
92 [shape=box, label="Location name='base'\nreg: r54\ncode: \nloadAI [BP+16] => r54\ntype: int"];
93 [shape=box, label="Location name='i'\nreg: r55\ncode: \nloadAI [BP-16] => r55\ntype: int"];
91 [shape=box, label="BinaryOp op='-'\nreg: r56\ncode: \nloadAI [BP+16] => r54\nloadAI [BP-16] => r55\nsub r54, r55 => r56\ntype: int"];
91 -> 92;
91 -> 93;
94 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r57\nreg: r57\ntype: int"];
90 [shape=box, label="BinaryOp op='/'\nreg: r58\ncode: \nloadAI [BP+16] => r54\nloadAI [BP-16] => r55\nsub r54, r55 => r56\nloadI 2 => r57\ndiv r56, r57 => r58\ntype: int"];
90 -> 91;
90 -> 94;
88 [shape=box, label="Assignment\ncode: \nloadAI [BP+16] => r54\nloadAI [BP-16] => r55\nsub r54, r55 => r56\nloadI 2 => r57\ndiv r56, r57 => r58\nstoreAI r58 => [BP-24]"];
88 -> 89;
88 -> 90;
96 [shape=box, label="Location name='hashes'\nreg: r59\ncode: \nloadAI [BP-32] => r59\ntype: int"];
97 [shape=box, label="Location name='i'\nreg: r60\ncode: \nloadAI [BP-16] => r60\ntype: int"];
95 [shape=box, label="Assignment\ncode: \nloadAI [BP-16] => r60\nstoreAI r60 => [BP-32]"];
95 -> 96;
95 -> 97;
99 [shape=box, label="Location name='s'\nreg: r61\ncode: \nloadAI [BP-40] => r61\ntype: int"];
100 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r62\nreg: r62\ntype: int"];
98 [shape=box, label="Assignment\ncode: \nloadI 0 => r62\nstoreAI r62 => [BP-40]"];
98 -> 99;
98 -> 100;
102 [shape=box, label="Location name='h'\nreg: r63\ncode: \nloadAI [BP-48] => r63\ntype: int"];
103 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r64\nreg: r64\ntype: int"];
101 [shape=box, label="Assignment\ncode: \nloadI 0 => r64\nstoreAI r64 => [BP-48]"];
101 -> 102;
101 -> 103;
106 [shape=box, label="Location name='s'\nreg: r65\ncode: \nloadAI [BP-40] => r65\ntype: int"];
107 [shape=box, label="Location name='spaces'\nreg: r66\ncode: \nloadAI [BP-24] => r66\ntype: int"];
105 [shape=box, label="BinaryOp op='<'\nreg: r67\ncode: \nloadAI [BP-40] => r65\nloadAI [BP-24] => r66\ncmp_LT r65, r66 => r67\ntype: bool"];
105 -> 106;
105 -> 107;
110 [shape=box, label="Literal value=' '\ncode: \nloadI \" \" => r68\nreg: r68\ntype: str"];
109 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \" \"\ntype: void"];
109 -> 110;
112 [shape=box, label="Location name='s'\nreg: r69\ncode: \nloadAI [BP-40] => r69\ntype: int"];
114 [shape=box, label="Location name='s'\nreg: r70\ncode: \nloadAI [BP-40] => r70\ntype: int"];
115 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r71\nreg: r71\ntype: int"];
113 [shape=box, label="BinaryOp op='+'\nreg: r72\ncode: \nloadAI [BP-40] => r70\nloadI 1 => r71\nadd r70, r71 => r72\ntype: int"];
113 -> 114;
113 -> 115;
111 [shape=box, label="Assignment\ncode: \nloadAI [BP-40] => r70\nloadI 1 => r71\nadd r70, r71 => r72\nstoreAI r72 => [BP-40]"];
111 -> 112;
111 -> 113;
108 [shape=box, label="Block\ncode: \nprint \" \"\nloadAI [BP-40] => r70\nloadI 1 => r71\nadd r70, r71 => r72\nstoreAI r72 => [BP-40]\nsymbolTable: (empty)"];
108 -> 109;
108 -> 111;
104 [shape=box, label="WhileLoop\ncode: \nl17:\nloadAI [BP-40] => r65\nloadAI [BP-24] => r66\ncmp_LT r65, r66 => r67\ncbr r67 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-40] => r70\nloadI 1 => r71\nadd r70, r71 => r72\nstoreAI r72 => [BP-40]\njump l17\nl19:"];
104 -> 105;
104 -> 108;
118 [shape=box, label="Location name='h'\nreg: r73\ncode: \nloadAI [BP-48] => r73\ntype: int"];
119 [shape=box, label="Location name='hashes'\nreg: r74\ncode: \nloadAI [BP-32] => r74\ntype: int"];
117 [shape=box, label="BinaryOp op='<'\nreg: r75\ncode: \nloadAI [BP-48] => r73\nloadAI [BP-32] => r74\ncmp_LT r73, r74 => r75\ntype: bool"];
117 -> 118;
117 -> 119;
122 [shape=box, label="Literal value='#'\ncode: \nloadI \"#\" => r76\nreg: r76\ntype: str"];
121 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"#\"\ntype: void"];
121 -> 122;
124 [shape=box, label="Location name='h'\nreg: r77\ncode: \nloadAI [BP-48] => r77\ntype: int"];
126 [shape=box, label="Location name='h'\nreg: r78\ncode: \nloadAI [BP-48] => r78\ntype: int"];
127 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r79\nreg: r79\ntype: int"];
125 [shape=box, label="BinaryOp op='+'\nreg: r80\ncode: \nloadAI [BP-48] => r78\nloadI 1 => r79\nadd r78, r79 => r80\ntype: int"];
125 -> 126;
125 -> 127;
123 [shape=box, label="Assignment\ncode: \nloadAI [BP-48] => r78\nloadI 1 => r79\nadd r78, r79 => r80\nstoreAI r80 => [BP-48]"];
123 -> 124;
123 -> 125;
120 [shape=box, label="Block\ncode: \nprint \"#\"\nloadAI [BP-48] => r78\nloadI 1 => r79\nadd r78, r79 => r80\nstoreAI r80 => [BP-48]\nsymbolTable: (empty)"];
120 -> 121;
120 -> 123;
116 [shape=box, label="WhileLoop\ncode: \nl20:\nloadAI [BP-48] => r73\nloadAI [BP-32] => r74\ncmp_LT r73, r74 => r75\ncbr r75 => l21, l22\nl21:\nprint \"#\"\nloadAI [BP-48] => r78\nloadI 1 => r79\nadd r78, r79 => r80\nstoreAI r80 => [BP-48]\njump l20\nl22:"];
116 -> 117;
116 -> 120;
129 [shape=box, label="Literal value='\\n'\ncode: \nloadI \"\\n\" => r81\nreg: r81\ntype: str"];
128 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"\\n\"\ntype: void"];
128 -> 129;
131 [shape=box, label="Location name='i'\nreg: r82\ncode: \nloadAI [BP-16] => r82\ntype: int"];
133 [shape=box, label="Location name='i'\nreg: r83\ncode: \nloadAI [BP-16] => r83\ntype: int"];
134 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r84\nreg: r84\ntype: int"];
132 [shape=box, label="BinaryOp op='+'\nreg: r85\ncode: \nloadAI [BP-16] => r83\nloadI 2 => r84\nadd r83, r84 => r85\ntype: int"];
132 -> 133;
132 -> 134;
130 [shape=box, label="Assignment\ncode: \nloadAI [BP-16] => r83\nloadI 2 => r84\nadd r83, r84 => r85\nstoreAI r85 => [BP-16]"];
130 -> 131;
130 -> 132;
83 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r54\nloadAI [BP-16] => r55\nsub r54, r55 => r56\nloadI 2 => r57\ndiv r56, r57 => r58\nstoreAI r58 => [BP-24]\nloadAI [BP-16] => r60\nstoreAI r60 => [BP-32]\nloadI 0 => r62\nstoreAI r62 => [BP-40]\nloadI 0 => r64\nstoreAI r64 => [BP-48]\nl17:\nloadAI [BP-40] => r65\nloadAI [BP-24] => r66\ncmp_LT r65, r66 => r67\ncbr r67 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-40] => r70\nloadI 1 => r71\nadd r70, r71 => r72\nstoreAI r72 => [BP-40]\njump l17\nl19:\nl20:\nloadAI [BP-48] => r73\nloadAI [BP-32] => r74\ncmp_LT r73, r74 => r75\ncbr r75 => l21, l22\nl21:\nprint \"#\"\nloadAI [BP-48] => r78\nloadI 1 => r79\nadd r78, r79 => r80\nstoreAI r80 => [BP-48]\njump l20\nl22:\nprint \"\\n\"\nloadAI [BP-16] => r83\nloadI 2 => r84\nadd r83, r84 => r85\nstoreAI r85 => [BP-16]\nsymbolTable: \n  spaces : int {stack offset=-24}\n  hashes : int {stack offset=-32}\n  s : int {stack offset=-40}\n  h : int {stack offset=-48}"];
83 -> 84;
83 -> 85;
83 -> 86;
83 -> 87;
83 -> 88;
83 -> 95;
83 -> 98;
83 -> 101;
83 -> 104;
83 -> 116;
83 -> 128;
83 -> 130;
79 [shape=box, label="WhileLoop\ncode: \nl14:\nloadAI [BP-16] => r50\nloadAI [BP+16] => r51\ncmp_LE r50, r51 => r52\ncbr r52 => l15, l16\nl15:\nloadAI [BP+16] => r54\nloadAI [BP-16] => r55\nsub r54, r55 => r56\nloadI 2 => r57\ndiv r56, r57 => r58\nstoreAI r58 => [BP-24]\nloadAI [BP-16] => r60\nstoreAI r60 => [BP-32]\nloadI 0 => r62\nstoreAI r62 => [BP-40]\nloadI 0 => r64\nstoreAI r64 => [BP-48]\nl17:\nloadAI [BP-40] => r65\nloadAI [BP-24] => r66\ncmp_LT r65, r66 => r67\ncbr r67 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-40] => r70\nloadI 1 => r71\nadd r70, r71 => r72\nstoreAI r72 => [BP-40]\njump l17\nl19:\nl20:\nloadAI [BP-48] => r73\nloadAI [BP-32] => r74\ncmp_LT r73, r74 => r75\ncbr r75 => l21, l22\nl21:\nprint \"#\"\nloadAI [BP-48] => r78\nloadI 1 => r79\nadd r78, r79 => r80\nstoreAI r80 => [BP-48]\njump l20\nl22:\nprint \"\\n\"\nloadAI [BP-16] => r83\nloadI 2 => r84\nadd r83, r84 => r85\nstoreAI r85 => [BP-16]\njump l14\nl16:"];
79 -> 80;
79 -> 83;
73 [shape=box, label="Block\ncode: \nloadI 1 => r49\nstoreAI r49 => [BP-16]\nl14:\nloadAI [BP-16] => r50\nloadAI [BP+16] => r51\ncmp_LE r50, r51 => r52\ncbr r52 => l15, l16\nl15:\nloadAI [BP+16] => r54\nloadAI [BP-16] => r55\nsub r54, r55 => r56\nloadI 2 => r57\ndiv r56, r57 => r58\nstoreAI r58 => [BP-24]\nloadAI [BP-16] => r60\nstoreAI r60 => [BP-32]\nloadI 0 => r62\nstoreAI r62 => [BP-40]\nloadI 0 => r64\nstoreAI r64 => [BP-48]\nl17:\nloadAI [BP-40] => r65\nloadAI [BP-24] => r66\ncmp_LT r65, r66 => r67\ncbr r67 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-40] => r70\nloadI 1 => r71\nadd r70, r71 => r72\nstoreAI r72 => [BP-40]\njump l17\nl19:\nl20:\nloadAI [BP-48] => r73\nloadAI [BP-32] => r74\ncmp_LT r73, r74 => r75\ncbr r75 => l21, l22\nl21:\nprint \"#\"\nloadAI [BP-48] => r78\nloadI 1 => r79\nadd r78, r79 => r80\nstoreAI r80 => [BP-48]\njump l20\nl22:\nprint \"\\n\"\nloadAI [BP-16] => r83\nloadI 2 => r84\nadd r83, r84 => r85\nstoreAI r85 => [BP-16]\njump l14\nl16:\nsymbolTable: \n  num_rows : int {stack offset=-8}\n  i : int {stack offset=-16}"];
73 -> 74;
73 -> 75;
73 -> 76;
73 -> 79;
72 [shape=box, label="FuncDecl name='draw_triangle'\ncode: \ndraw_triangle:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 1 => r49\nstoreAI r49 => [BP-16]\nl14:\nloadAI [BP-16] => r50\nloadAI [BP+16] => r51\ncmp_LE r50, r51 => r52\ncbr r52 => l15, l16\nl15:\nloadAI [BP+16] => r54\nloadAI [BP-16] => r55\nsub r54, r55 => r56\nloadI 2 => r57\ndiv r56, r57 => r58\nstoreAI r58 => [BP-24]\nloadAI [BP-16] => r60\nstoreAI r60 => [BP-32]\nloadI 0 => r62\nstoreAI r62 => [BP-40]\nloadI 0 => r64\nstoreAI r64 => [BP-48]\nl17:\nloadAI [BP-40] => r65\nloadAI [BP-24] => r66\ncmp_LT r65, r66 => r67\ncbr r67 => l18, l19\nl18:\nprint \" \"\nloadAI [BP-40] => r70\nloadI 1 => r71\nadd r70, r71 => r72\nstoreAI r72 => [BP-40]\njump l17\nl19:\nl20:\nloadAI [BP-48] => r73\nloadAI [BP-32] => r74\ncmp_LT r73, r74 => r75\ncbr r75 => l21, l22\nl21:\nprint \"#\"\nloadAI [BP-48] => r78\nloadI 1 => r79\nadd r78, r79 => r80\nstoreAI r80 => [BP-48]\njump l20\nl22:\nprint \"\\n\"\nloadAI [BP-16] => r83\nloadI 2 => r84\nadd r83, r84 => r85\nstoreAI r85 => [BP-16]\njump l14\nl16:\nl13:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 48\nsymbolTable: \n  base : int {stack offset=16}"];
72 -> 73;
137 [shape=box, label="VarDecl name='g'"];
140 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r86\nreg: r86\ntype: int"];
139 [shape=box, label="Location name='nums'\nreg: r88\ncode: \nloadI 256 => r87\nloadI 0 => r86\nmultI r86, 8 => r89\nloadAO [r87+r89] => r88\ntype: int"];
139 -> 140;
141 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r90\nreg: r90\ntype: int"];
138 [shape=box, label="Assignment\ncode: \nloadI 256 => r91\nloadI 2 => r90\nloadI 0 => r86\nmultI r86, 8 => r92\nstoreAO r90 => [r91+r92]"];
138 -> 139;
138 -> 141;
144 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r93\nreg: r93\ntype: int"];
143 [shape=box, label="Location name='nums'\nreg: r95\ncode: \nloadI 256 => r94\nloadI 1 => r93\nmultI r93, 8 => r96\nloadAO [r94+r96] => r95\ntype: int"];
143 -> 144;
145 [shape=box, label="Literal value=3\ncode: \nloadI 3 => r97\nreg: r97\ntype: int"];
142 [shape=box, label="Assignment\ncode: \nloadI 256 => r98\nloadI 3 => r97\nloadI 1 => r93\nmultI r93, 8 => r99\nstoreAO r97 => [r98+r99]"];
142 -> 143;
142 -> 145;
148 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r100\nreg: r100\ntype: int"];
147 [shape=box, label="Location name='nums'\nreg: r102\ncode: \nloadI 256 => r101\nloadI 2 => r100\nmultI r100, 8 => r103\nloadAO [r101+r103] => r102\ntype: int"];
147 -> 148;
149 [shape=box, label="Literal value=7\ncode: \nloadI 7 => r104\nreg: r104\ntype: int"];
146 [shape=box, label="Assignment\ncode: \nloadI 256 => r105\nloadI 7 => r104\nloadI 2 => r100\nmultI r100, 8 => r106\nstoreAO r104 => [r105+r106]"];
146 -> 147;
146 -> 149;
152 [shape=box, label="Literal value=3\ncode: \nloadI 3 => r107\nreg: r107\ntype: int"];
151 [shape=box, label="Location name='nums'\nreg: r109\ncode: \nloadI 256 => r108\nloadI 3 => r107\nmultI r107, 8 => r110\nloadAO [r108+r110] => r109\ntype: int"];
151 -> 152;
153 [shape=box, label="Literal value=8\ncode: \nloadI 8 => r111\nreg: r111\ntype: int"];
150 [shape=box, label="Assignment\ncode: \nloadI 256 => r112\nloadI 8 => r111\nloadI 3 => r107\nmultI r107, 8 => r113\nstoreAO r111 => [r112+r113]"];
150 -> 151;
150 -> 153;
156 [shape=box, label="Literal value=4\ncode: \nloadI 4 => r114\nreg: r114\ntype: int"];
155 [shape=box, label="Location name='nums'\nreg: r116\ncode: \nloadI 256 => r115\nloadI 4 => r114\nmultI r114, 8 => r117\nloadAO [r115+r117] => r116\ntype: int"];
155 -> 156;
157 [shape=box, label="Literal value=10\ncode: \nloadI 10 => r118\nreg: r118\ntype: int"];
154 [shape=box, label="Assignment\ncode: \nloadI 256 => r119\nloadI 10 => r118\nloadI 4 => r114\nmultI r114, 8 => r120\nstoreAO r118 => [r119+r120]"];
154 -> 155;
154 -> 157;
160 [shape=box, label="Literal value=5\ncode: \nloadI 5 => r121\nreg: r121\ntype: int"];
159 [shape=box, label="Location name='nums'\nreg: r123\ncode: \nloadI 256 => r122\nloadI 5 => r121\nmultI r121, 8 => r124\nloadAO [r122+r124] => r123\ntype: int"];
159 -> 160;
161 [shape=box, label="Literal value=13\ncode: \nloadI 13 => r125\nreg: r125\ntype: int"];
158 [shape=box, label="Assignment\ncode: \nloadI 256 => r126\nloadI 13 => r125\nloadI 5 => r121\nmultI r121, 8 => r127\nstoreAO r125 => [r126+r127]"];
158 -> 159;
158 -> 161;
164 [shape=box, label="Literal value=7\ncode: \nloadI 7 => r128\nreg: r128\ntype: int"];
163 [shape=box, label="Location name='nums'\nreg: r130\ncode: \nloadI 256 => r129\nloadI 7 => r128\nmultI r128, 8 => r131\nloadAO [r129+r131] => r130\ntype: int"];
163 -> 164;
165 [shape=box, label="Literal value=20\ncode: \nloadI 20 => r132\nreg: r132\ntype: int"];
162 [shape=box, label="Assignment\ncode: \nloadI 256 => r133\nloadI 20 => r132\nloadI 7 => r128\nmultI r128, 8 => r134\nstoreAO r132 => [r133+r134]"];
162 -> 163;
162 -> 165;
168 [shape=box, label="Literal value=13\ncode: \nloadI 13 => r135\nreg: r135\ntype: int"];
167 [shape=box, label="Location name='nums'\nreg: r137\ncode: \nloadI 256 => r136\nloadI 13 => r135\nmultI r135, 8 => r138\nloadAO [r136+r138] => r137\ntype: int"];
167 -> 168;
169 [shape=box, label="Literal value=3\ncode: \nloadI 3 => r139\nreg: r139\ntype: int"];
166 [shape=box, label="Assignment\ncode: \nloadI 256 => r140\nloadI 3 => r139\nloadI 13 => r135\nmultI r135, 8 => r141\nstoreAO r139 => [r140+r141]"];
166 -> 167;
166 -> 169;
171 [shape=box, label="Literal value=20\ncode: \nloadI 20 => r142\nreg: r142\ntype: int"];
170 [shape=box, label="FuncCall name='draw_triangle'\nreg: r143\ncode: \nloadI 20 => r142\npush r142\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r143\ntype: void"];
170 -> 171;
175 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r144\nreg: r144\ntype: int"];
174 [shape=box, label="Location name='nums'\nreg: r146\ncode: \nloadI 256 => r145\nloadI 0 => r144\nmultI r144, 8 => r147\nloadAO [r145+r147] => r146\ntype: int"];
174 -> 175;
173 [shape=box, label="FuncCall name='fact'\nreg: r148\ncode: \nloadI 256 => r145\nloadI 0 => r144\nmultI r144, 8 => r147\nloadAO [r145+r147] => r146\npush r146\ncall fact\naddI SP, 8 => SP\ni2i RET => r148\ntype: int"];
173 -> 174;
172 [shape=box, label="FuncCall name='print_int'\ncode: \nloadI 256 => r145\nloadI 0 => r144\nmultI r144, 8 => r147\nloadAO [r145+r147] => r146\npush r146\ncall fact\naddI SP, 8 => SP\ni2i RET => r148\nprint r148\ntype: void"];
172 -> 173;
177 [shape=box, label="Literal value='\\n'\ncode: \nloadI \"\\n\" => r149\nreg: r149\ntype: str"];
176 [shape=box, label="FuncCall name='print_str'\ncode: \nprint \"\\n\"\ntype: void"];
176 -> 177;
179 [shape=box, label="Location name='g'\nreg: r150\ncode: \nloadAI [BP-8] => r150\ntype: int"];
182 [shape=box, label="Literal value=7\ncode: \nloadI 7 => r151\nreg: r151\ntype: int"];
181 [shape=box, label="Location name='nums'\nreg: r153\ncode: \nloadI 256 => r152\nloadI 7 => r151\nmultI r151, 8 => r154\nloadAO [r152+r154] => r153\ntype: int"];
181 -> 182;
183 [shape=box, label="Literal value=7\ncode: \nloadI 7 => r155\nreg: r155\ntype: int"];
180 [shape=box, label="FuncCall name='gcd'\nreg: r156\ncode: \nloadI 256 => r152\nloadI 7 => r151\nmultI r151, 8 => r154\nloadAO [r152+r154] => r153\nloadI 7 => r155\npush r155\npush r153\ncall gcd\naddI SP, 16 => SP\ni2i RET => r156\ntype: int"];
180 -> 181;
180 -> 183;
178 [shape=box, label="Assignment\ncode: \nloadI 256 => r152\nloadI 7 => r151\nmultI r151, 8 => r154\nloadAO [r152+r154] => r153\nloadI 7 => r155\npush r155\npush r153\ncall gcd\naddI SP, 16 => SP\ni2i RET => r156\nstoreAI r156 => [BP-8]"];
178 -> 179;
178 -> 180;
185 [shape=box, label="Location name='g'\nreg: r157\ncode: \nloadAI [BP-8] => r157\ntype: int"];
184 [shape=box, label="Return\ncode: \nloadAI [BP-8] => r157\ni2i r157 => RET\njump l23"];
184 -> 185;
136 [shape=box, label="Block\ncode: \nloadI 256 => r91\nloadI 2 => r90\nloadI 0 => r86\nmultI r86, 8 => r92\nstoreAO r90 => [r91+r92]\nloadI 256 => r98\nloadI 3 => r97\nloadI 1 => r93\nmultI r93, 8 => r99\nstoreAO r97 => [r98+r99]\nloadI 256 => r105\nloadI 7 => r104\nloadI 2 => r100\nmultI r100, 8 => r106\nstoreAO r104 => [r105+r106]\nloadI 256 => r112\nloadI 8 => r111\nloadI 3 => r107\nmultI r107, 8 => r113\nstoreAO r111 => [r112+r113]\nloadI 256 => r119\nloadI 10 => r118\nloadI 4 => r114\nmultI r114, 8 => r120\nstoreAO r118 => [r119+r120]\nloadI 256 => r126\nloadI 13 => r125\nloadI 5 => r121\nmultI r121, 8 => r127\nstoreAO r125 => [r126+r127]\nloadI 256 => r133\nloadI 20 => r132\nloadI 7 => r128\nmultI r128, 8 => r134\nstoreAO r132 => [r133+r134]\nloadI 256 => r140\nloadI 3 => r139\nloadI 13 => r135\nmultI r135, 8 => r141\nstoreAO r139 => [r140+r141]\nloadI 20 => r142\npush r142\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r143\nloadI 256 => r145\nloadI 0 => r144\nmultI r144, 8 => r147\nloadAO [r145+r147] => r146\npush r146\ncall fact\naddI SP, 8 => SP\ni2i RET => r148\nprint r148\nprint \"\\n\"\nloadI 256 => r152\nloadI 7 => r151\nmultI r151, 8 => r154\nloadAO [r152+r154] => r153\nloadI 7 => r155\npush r155\npush r153\ncall gcd\naddI SP, 16 => SP\ni2i RET => r156\nstoreAI r156 => [BP-8]\nloadAI [BP-8] => r157\ni2i r157 => RET\njump l23\nsymbolTable: \n  g : int {stack offset=-8}"];
136 -> 137;
136 -> 138;
136 -> 142;
136 -> 146;
136 -> 150;
136 -> 154;
136 -> 158;
136 -> 162;
136 -> 166;
136 -> 170;
136 -> 172;
136 -> 176;
136 -> 178;
136 -> 184;
135 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -72 => SP\nloadI 256 => r91\nloadI 2 => r90\nloadI 0 => r86\nmultI r86, 8 => r92\nstoreAO r90 => [r91+r92]\nloadI 256 => r98\nloadI 3 => r97\nloadI 1 => r93\nmultI r93, 8 => r99\nstoreAO r97 => [r98+r99]\nloadI 256 => r105\nloadI 7 => r104\nloadI 2 => r100\nmultI r100, 8 => r106\nstoreAO r104 => [r105+r106]\nloadI 256 => r112\nloadI 8 => r111\nloadI 3 => r107\nmultI r107, 8 => r113\nstoreAO r111 => [r112+r113]\nloadI 256 => r119\nloadI 10 => r118\nloadI 4 => r114\nmultI r114, 8 => r120\nstoreAO r118 => [r119+r120]\nloadI 256 => r126\nloadI 13 => r125\nloadI 5 => r121\nmultI r121, 8 => r127\nstoreAO r125 => [r126+r127]\nloadI 256 => r133\nloadI 20 => r132\nloadI 7 => r128\nmultI r128, 8 => r134\nstoreAO r132 => [r133+r134]\nloadI 256 => r140\nloadI 3 => r139\nloadI 13 => r135\nmultI r135, 8 => r141\nstoreAO r139 => [r140+r141]\nloadI 20 => r142\npush r142\ncall draw_triangle\naddI SP, 8 => SP\ni2i RET => r143\nloadI 256 => r145\nloadI 0 => r144\nmultI r144, 8 => r147\nloadAO [r145+r147] => r146\npush r146\ncall fact\naddI SP, 8 => SP\ni2i RET => r148\nprint r148\nprint \"\\n\"\nloadI 256 => r152\nloadI 7 => r151\nmultI r151, 8 => r154\nloadAO [r152+r154] => r153\nloadI 7 => r155\npush r155\npush r153\ncall gcd\naddI SP, 16 => SP\ni2i RET => r156\nstoreAI r156 => [BP-8]\nloadAI [BP-8] => r157\ni2i r157 => RET\njump l23\nl23:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 8\nsymbolTable: (empty)"];
135 -> 136;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 800\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  gcd : (int, int) -> int\n  fact : (int) -> int\n  draw_triangle : (int) -> void\n  main : () -> int\n  nums : int [100] {static offset=256}"];
0 -> 1;
0 -> 2;
0 -> 43;
0 -> 72;
0 -> 135;
}
