digraph AST {
1 [shape=box, label="VarDecl name='nums'"];
6 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r0\nreg: r0\ntype: int"];
5 [shape=box, label="Location name='nums'\nreg: r2\ncode: \nloadI 256 => r1\nloadI 0 => r0\nmultI r0, 8 => r3\nadd r1, r3 => r4\nloadAI [r4+0] => r2\ntype: int"];
5 -> 6;
7 [shape=box, label="Literal value=5\ncode: \nloadI 5 => r5\nreg: r5\ntype: int"];
4 [shape=box, label="Assignment\ncode: \nloadI 256 => r6\nloadI 5 => r5\nloadI 0 => r0\nmultI r0, 8 => r7\nadd r6, r7 => r8\nstoreAI r5 => [r8+0]"];
4 -> 5;
4 -> 7;
10 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r9\nreg: r9\ntype: int"];
9 [shape=box, label="Location name='nums'\nreg: r11\ncode: \nloadI 256 => r10\nloadI 1 => r9\nmultI r9, 8 => r12\nadd r10, r12 => r13\nloadAI [r13+0] => r11\ntype: int"];
9 -> 10;
11 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r14\nreg: r14\ntype: int"];
8 [shape=box, label="Assignment\ncode: \nloadI 256 => r15\nloadI 2 => r14\nloadI 1 => r9\nmultI r9, 8 => r16\nadd r15, r16 => r17\nstoreAI r14 => [r17+0]"];
8 -> 9;
8 -> 11;
15 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r18\nreg: r18\ntype: int"];
16 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r19\nreg: r19\ntype: int"];
14 [shape=box, label="BinaryOp op='+'\nreg: r20\ncode: \nloadI 1 => r18\nloadI 1 => r19\naddI r18, 1 => r20\nadd r18, r19 => r20\ntype: int"];
14 -> 15;
14 -> 16;
13 [shape=box, label="Location name='nums'\nreg: r22\ncode: \nloadI 256 => r21\nloadI 1 => r18\nloadI 1 => r19\naddI r18, 1 => r20\nadd r18, r19 => r20\nmultI r20, 8 => r23\nadd r21, r23 => r24\nloadAI [r24+0] => r22\ntype: int"];
13 -> 14;
17 [shape=box, label="Literal value=3\ncode: \nloadI 3 => r25\nreg: r25\ntype: int"];
12 [shape=box, label="Assignment\ncode: \nloadI 256 => r26\nloadI 3 => r25\nloadI 1 => r18\nloadI 1 => r19\naddI r18, 1 => r20\nadd r18, r19 => r20\nmultI r20, 8 => r27\nadd r26, r27 => r28\nstoreAI r25 => [r28+0]"];
12 -> 13;
12 -> 17;
21 [shape=box, label="Literal value=10\ncode: \nloadI 10 => r29\nreg: r29\ntype: int"];
22 [shape=box, label="Literal value=2\ncode: \nloadI 2 => r30\nreg: r30\ntype: int"];
20 [shape=box, label="BinaryOp op='/'\nreg: r31\ncode: \nloadI 10 => r29\nloadI 2 => r30\ndiv r29, r30 => r31\ntype: int"];
20 -> 21;
20 -> 22;
19 [shape=box, label="Location name='nums'\nreg: r33\ncode: \nloadI 256 => r32\nloadI 10 => r29\nloadI 2 => r30\ndiv r29, r30 => r31\nmultI r31, 8 => r34\nadd r32, r34 => r35\nloadAI [r35+0] => r33\ntype: int"];
19 -> 20;
23 [shape=box, label="Literal value=8\ncode: \nloadI 8 => r36\nreg: r36\ntype: int"];
18 [shape=box, label="Assignment\ncode: \nloadI 256 => r37\nloadI 8 => r36\nloadI 10 => r29\nloadI 2 => r30\ndiv r29, r30 => r31\nmultI r31, 8 => r38\nadd r37, r38 => r39\nstoreAI r36 => [r39+0]"];
18 -> 19;
18 -> 23;
26 [shape=box, label="Literal value=3\ncode: \nloadI 3 => r40\nreg: r40\ntype: int"];
25 [shape=box, label="FuncCall name='sum_nums'\nreg: r41\ncode: \nloadI 3 => r40\npush r40\ncall sum_nums\naddI SP, 8 => SP\ni2i RET => r41\ntype: int"];
25 -> 26;
24 [shape=box, label="Return\ncode: \nloadI 3 => r40\npush r40\ncall sum_nums\naddI SP, 8 => SP\ni2i RET => r41\ni2i r41 => RET\njump l0"];
24 -> 25;
3 [shape=box, label="Block\ncode: \nloadI 256 => r6\nloadI 5 => r5\nloadI 0 => r0\nmultI r0, 8 => r7\nadd r6, r7 => r8\nstoreAI r5 => [r8+0]\nloadI 256 => r15\nloadI 2 => r14\nloadI 1 => r9\nmultI r9, 8 => r16\nadd r15, r16 => r17\nstoreAI r14 => [r17+0]\nloadI 256 => r26\nloadI 3 => r25\nloadI 1 => r18\nloadI 1 => r19\naddI r18, 1 => r20\nadd r18, r19 => r20\nmultI r20, 8 => r27\nadd r26, r27 => r28\nstoreAI r25 => [r28+0]\nloadI 256 => r37\nloadI 8 => r36\nloadI 10 => r29\nloadI 2 => r30\ndiv r29, r30 => r31\nmultI r31, 8 => r38\nadd r37, r38 => r39\nstoreAI r36 => [r39+0]\nloadI 3 => r40\npush r40\ncall sum_nums\naddI SP, 8 => SP\ni2i RET => r41\ni2i r41 => RET\njump l0\nsymbolTable: (empty)"];
3 -> 4;
3 -> 8;
3 -> 12;
3 -> 18;
3 -> 24;
2 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -32 => SP\nloadI 256 => r6\nloadI 5 => r5\nloadI 0 => r0\nmultI r0, 8 => r7\nadd r6, r7 => r8\nstoreAI r5 => [r8+0]\nloadI 256 => r15\nloadI 2 => r14\nloadI 1 => r9\nmultI r9, 8 => r16\nadd r15, r16 => r17\nstoreAI r14 => [r17+0]\nloadI 256 => r26\nloadI 3 => r25\nloadI 1 => r18\nloadI 1 => r19\naddI r18, 1 => r20\nadd r18, r19 => r20\nmultI r20, 8 => r27\nadd r26, r27 => r28\nstoreAI r25 => [r28+0]\nloadI 256 => r37\nloadI 8 => r36\nloadI 10 => r29\nloadI 2 => r30\ndiv r29, r30 => r31\nmultI r31, 8 => r38\nadd r37, r38 => r39\nstoreAI r36 => [r39+0]\nloadI 3 => r40\npush r40\ncall sum_nums\naddI SP, 8 => SP\ni2i RET => r41\ni2i r41 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: (empty)"];
2 -> 3;
29 [shape=box, label="VarDecl name='i'"];
30 [shape=box, label="VarDecl name='result'"];
32 [shape=box, label="Location name='i'\nreg: r42\ncode: \nloadAI [BP-8] => r42\ntype: int"];
33 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r43\nreg: r43\ntype: int"];
31 [shape=box, label="Assignment\ncode: \nloadI 0 => r43\nstoreAI r43 => [BP-8]"];
31 -> 32;
31 -> 33;
35 [shape=box, label="Location name='result'\nreg: r44\ncode: \nloadAI [BP-16] => r44\ntype: int"];
36 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r45\nreg: r45\ntype: int"];
34 [shape=box, label="Assignment\ncode: \nloadI 0 => r45\nstoreAI r45 => [BP-16]"];
34 -> 35;
34 -> 36;
39 [shape=box, label="Location name='len'\nreg: r46\ncode: \nloadAI [BP+16] => r46\ntype: int"];
40 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r47\nreg: r47\ntype: int"];
38 [shape=box, label="BinaryOp op='=='\nreg: r48\ncode: \nloadAI [BP+16] => r46\nloadI 0 => r47\ncmp_EQ r46, r47 => r48\ntype: bool"];
38 -> 39;
38 -> 40;
43 [shape=box, label="Literal value=0\ncode: \nloadI 0 => r49\nreg: r49\ntype: int"];
42 [shape=box, label="Return\ncode: \nloadI 0 => r49\ni2i r49 => RET\njump l1"];
42 -> 43;
41 [shape=box, label="Block\ncode: \nloadI 0 => r49\ni2i r49 => RET\njump l1\nsymbolTable: (empty)"];
41 -> 42;
37 [shape=box, label="Conditional\ncode: \nloadAI [BP+16] => r46\nloadI 0 => r47\ncmp_EQ r46, r47 => r48\ncbr r48 => l2, l3\nl2:\nloadI 0 => r49\ni2i r49 => RET\njump l1\nl3:"];
37 -> 38;
37 -> 41;
46 [shape=box, label="Location name='i'\nreg: r50\ncode: \nloadAI [BP-8] => r50\ntype: int"];
47 [shape=box, label="Location name='len'\nreg: r51\ncode: \nloadAI [BP+16] => r51\ntype: int"];
45 [shape=box, label="BinaryOp op='<'\nreg: r52\ncode: \nloadAI [BP-8] => r50\nloadAI [BP+16] => r51\ncmp_LT r50, r51 => r52\ntype: bool"];
45 -> 46;
45 -> 47;
50 [shape=box, label="Location name='result'\nreg: r53\ncode: \nloadAI [BP-16] => r53\ntype: int"];
52 [shape=box, label="Location name='result'\nreg: r54\ncode: \nloadAI [BP-16] => r54\ntype: int"];
54 [shape=box, label="Location name='i'\nreg: r55\ncode: \nloadAI [BP-8] => r55\ntype: int"];
53 [shape=box, label="Location name='nums'\nreg: r57\ncode: \nloadI 256 => r56\nloadAI [BP-8] => r55\nmultI r55, 8 => r58\nadd r56, r58 => r59\nloadAI [r59+0] => r57\ntype: int"];
53 -> 54;
51 [shape=box, label="BinaryOp op='+'\nreg: r60\ncode: \nloadAI [BP-16] => r54\nloadI 256 => r56\nloadAI [BP-8] => r55\nmultI r55, 8 => r58\nadd r56, r58 => r59\nloadAI [r59+0] => r57\nadd r54, r57 => r60\ntype: int"];
51 -> 52;
51 -> 53;
49 [shape=box, label="Assignment\ncode: \nloadAI [BP-16] => r54\nloadI 256 => r56\nloadAI [BP-8] => r55\nmultI r55, 8 => r58\nadd r56, r58 => r59\nloadAI [r59+0] => r57\nadd r54, r57 => r60\nstoreAI r60 => [BP-16]"];
49 -> 50;
49 -> 51;
56 [shape=box, label="Location name='i'\nreg: r61\ncode: \nloadAI [BP-8] => r61\ntype: int"];
58 [shape=box, label="Location name='i'\nreg: r62\ncode: \nloadAI [BP-8] => r62\ntype: int"];
59 [shape=box, label="Literal value=1\ncode: \nloadI 1 => r63\nreg: r63\ntype: int"];
57 [shape=box, label="BinaryOp op='+'\nreg: r64\ncode: \nloadAI [BP-8] => r62\nloadI 1 => r63\nadd r62, r63 => r64\ntype: int"];
57 -> 58;
57 -> 59;
55 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r62\nloadI 1 => r63\nadd r62, r63 => r64\nstoreAI r64 => [BP-8]"];
55 -> 56;
55 -> 57;
48 [shape=box, label="Block\ncode: \nloadAI [BP-16] => r54\nloadI 256 => r56\nloadAI [BP-8] => r55\nmultI r55, 8 => r58\nadd r56, r58 => r59\nloadAI [r59+0] => r57\nadd r54, r57 => r60\nstoreAI r60 => [BP-16]\nloadAI [BP-8] => r62\nloadI 1 => r63\nadd r62, r63 => r64\nstoreAI r64 => [BP-8]\nsymbolTable: (empty)"];
48 -> 49;
48 -> 55;
44 [shape=box, label="WhileLoop\ncode: \nl4:\nloadAI [BP-8] => r50\nloadAI [BP+16] => r51\ncmp_LT r50, r51 => r52\ncbr r52 => l5, l6\nl5:\nloadAI [BP-16] => r54\nloadI 256 => r56\nloadAI [BP-8] => r55\nmultI r55, 8 => r58\nadd r56, r58 => r59\nloadAI [r59+0] => r57\nadd r54, r57 => r60\nstoreAI r60 => [BP-16]\nloadAI [BP-8] => r62\nloadI 1 => r63\nadd r62, r63 => r64\nstoreAI r64 => [BP-8]\njump l4\nl6:"];
44 -> 45;
44 -> 48;
61 [shape=box, label="Location name='result'\nreg: r65\ncode: \nloadAI [BP-16] => r65\ntype: int"];
60 [shape=box, label="Return\ncode: \nloadAI [BP-16] => r65\ni2i r65 => RET\njump l1"];
60 -> 61;
28 [shape=box, label="Block\ncode: \nloadI 0 => r43\nstoreAI r43 => [BP-8]\nloadI 0 => r45\nstoreAI r45 => [BP-16]\nloadAI [BP+16] => r46\nloadI 0 => r47\ncmp_EQ r46, r47 => r48\ncbr r48 => l2, l3\nl2:\nloadI 0 => r49\ni2i r49 => RET\njump l1\nl3:\nl4:\nloadAI [BP-8] => r50\nloadAI [BP+16] => r51\ncmp_LT r50, r51 => r52\ncbr r52 => l5, l6\nl5:\nloadAI [BP-16] => r54\nloadI 256 => r56\nloadAI [BP-8] => r55\nmultI r55, 8 => r58\nadd r56, r58 => r59\nloadAI [r59+0] => r57\nadd r54, r57 => r60\nstoreAI r60 => [BP-16]\nloadAI [BP-8] => r62\nloadI 1 => r63\nadd r62, r63 => r64\nstoreAI r64 => [BP-8]\njump l4\nl6:\nloadAI [BP-16] => r65\ni2i r65 => RET\njump l1\nsymbolTable: \n  i : int {stack offset=-8}\n  result : int {stack offset=-16}"];
28 -> 29;
28 -> 30;
28 -> 31;
28 -> 34;
28 -> 37;
28 -> 44;
28 -> 60;
27 [shape=box, label="FuncDecl name='sum_nums'\ncode: \nsum_nums:\npush BP\ni2i SP => BP\naddI SP, -16 => SP\nloadI 0 => r43\nstoreAI r43 => [BP-8]\nloadI 0 => r45\nstoreAI r45 => [BP-16]\nloadAI [BP+16] => r46\nloadI 0 => r47\ncmp_EQ r46, r47 => r48\ncbr r48 => l2, l3\nl2:\nloadI 0 => r49\ni2i r49 => RET\njump l1\nl3:\nl4:\nloadAI [BP-8] => r50\nloadAI [BP+16] => r51\ncmp_LT r50, r51 => r52\ncbr r52 => l5, l6\nl5:\nloadAI [BP-16] => r54\nloadI 256 => r56\nloadAI [BP-8] => r55\nmultI r55, 8 => r58\nadd r56, r58 => r59\nloadAI [r59+0] => r57\nadd r54, r57 => r60\nstoreAI r60 => [BP-16]\nloadAI [BP-8] => r62\nloadI 1 => r63\nadd r62, r63 => r64\nstoreAI r64 => [BP-8]\njump l4\nl6:\nloadAI [BP-16] => r65\ni2i r65 => RET\njump l1\nl1:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 16\nsymbolTable: \n  len : int {stack offset=16}"];
27 -> 28;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 800\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int\n  sum_nums : (int) -> int\n  nums : int [100] {static offset=256}"];
0 -> 1;
0 -> 2;
0 -> 27;
}
